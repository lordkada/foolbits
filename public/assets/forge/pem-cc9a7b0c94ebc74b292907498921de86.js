!function(){function e(e){function n(e){for(var n=e.name+": ",r=[],t=0;t<e.values.length;++t)r.push(e.values[t].replace(/^(\S+\r\n)/,function(e,n){return" "+n}));n+=r.join(",")+"\r\n";for(var a=0,o=-1,t=0;t<n.length;++t,++a)if(a>65&&-1!==o){var s=n[o];","===s?(++o,n=n.substr(0,o)+"\r\n "+n.substr(o)):n=n.substr(0,o)+"\r\n"+s+n.substr(o+1),a=t-o-1,o=-1,++t}else(" "===n[t]||"	"===n[t]||","===n[t])&&(o=t);return n}function r(e){return e.replace(/^\s+/,"")}var t=e.pem=e.pem||{};t.encode=function(r,t){t=t||{};var a,o="-----BEGIN "+r.type+"-----\r\n";if(r.procType&&(a={name:"Proc-Type",values:[String(r.procType.version),r.procType.type]},o+=n(a)),r.contentDomain&&(a={name:"Content-Domain",values:[r.contentDomain]},o+=n(a)),r.dekInfo&&(a={name:"DEK-Info",values:[r.dekInfo.algorithm]},r.dekInfo.parameters&&a.values.push(r.dekInfo.parameters),o+=n(a)),r.headers)for(var s=0;s<r.headers.length;++s)o+=n(r.headers[s]);return r.procType&&(o+="\r\n"),o+=e.util.encode64(r.body,t.maxline||64)+"\r\n",o+="-----END "+r.type+"-----\r\n"},t.decode=function(n){for(var t,a=[],o=/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g,s=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/,i=/\r?\n/;;){if(t=o.exec(n),!t)break;var f={type:t[1],procType:null,contentDomain:null,dekInfo:null,headers:[],body:e.util.decode64(t[3])};if(a.push(f),t[2]){for(var l=t[2].split(i),u=0;t&&u<l.length;){for(var p=l[u].replace(/\s+$/,""),d=u+1;d<l.length;++d){var c=l[d];if(!/\s/.test(c[0]))break;p+=c,u=d}if(t=p.match(s)){for(var m={name:t[1],values:[]},h=t[2].split(","),v=0;v<h.length;++v)m.values.push(r(h[v]));if(f.procType)if(f.contentDomain||"Content-Domain"!==m.name)if(f.dekInfo||"DEK-Info"!==m.name)f.headers.push(m);else{if(0===m.values.length)throw{message:'Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.'};f.dekInfo={algorithm:h[0],parameters:h[1]||null}}else f.contentDomain=h[0]||"";else{if("Proc-Type"!==m.name)throw{message:'Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".'};if(2!==m.values.length)throw{message:'Invalid PEM formatted message. The "Proc-Type" header must have two subfields.'};f.procType={version:h[0],type:h[1]}}}++u}if("ENCRYPTED"===f.procType&&!f.dekInfo)throw{message:'Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".'}}}if(0===a.length)throw{message:"Invalid PEM formatted message."};return a}}var n="pem";if("function"!=typeof define){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var r=!0;define=function(e,n){n(require,module)}}var t,a=function(r,a){a.exports=function(a){var o=t.map(function(e){return r(e)}).concat(e);if(a=a||{},a.defined=a.defined||{},a.defined[n])return a[n];a.defined[n]=!0;for(var s=0;s<o.length;++s)o[s](a);return a[n]}},o=define;define=function(e,n){return t="string"==typeof e?n.slice(2):e.slice(2),r?(delete define,o.apply(null,Array.prototype.slice.call(arguments,0))):(define=o,define.apply(null,Array.prototype.slice.call(arguments,0)))},define(["require","module","./util"],function(){a.apply(null,Array.prototype.slice.call(arguments,0))})}();