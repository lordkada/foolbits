!function(){function e(e){function t(t){for(var a,r,i=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]),s=t.attributes,n=0;n<s.length;++n){a=s[n];var c=a.value,u=o.Type.PRINTABLESTRING;"valueTagClass"in a&&(u=a.valueTagClass,u===o.Type.UTF8&&(c=e.util.encodeUtf8(c))),r=o.create(o.Class.UNIVERSAL,o.Type.SET,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(a.type).getBytes()),o.create(o.Class.UNIVERSAL,u,!1,c)])]),i.value.push(r)}return i}function a(e){var t=o.create(o.Class.CONTEXT_SPECIFIC,3,!0,[]),a=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);t.value.push(a);for(var r,i,s=0;s<e.length;++s){r=e[s],i=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]),a.value.push(i),i.value.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(r.id).getBytes())),r.critical&&i.value.push(o.create(o.Class.UNIVERSAL,o.Type.BOOLEAN,!1,String.fromCharCode(255)));var n=r.value;"string"!=typeof r.value&&(n=o.toDer(n).getBytes()),i.value.push(o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,n))}return t}function r(e,t){switch(e){case u["RSASSA-PSS"]:var a=[];return void 0!==t.hash.algorithmOid&&a.push(o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.hash.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")])])),void 0!==t.mgf.algorithmOid&&a.push(o.create(o.Class.CONTEXT_SPECIFIC,1,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.mgf.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.mgf.hash.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")])])])),void 0!==t.saltLength&&a.push(o.create(o.Class.CONTEXT_SPECIFIC,2,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,String.fromCharCode(t.saltLength))])),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,a);default:return o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")}}function i(t){var a=o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[]);if(0===t.attributes.length)return a;for(var r=t.attributes,i=0;i<r.length;++i){var s=r[i],n=s.value,c=o.Type.UTF8;"valueTagClass"in s&&(c=s.valueTagClass),c===o.Type.UTF8&&(n=e.util.encodeUtf8(n));var u=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(s.type).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SET,!0,[o.create(o.Class.UNIVERSAL,c,!1,n)])]);a.value.push(u)}return a}function s(e,t,a){for(var r=[n(e+t)],i=16,s=1;a>i;++s,i+=16)r.push(n(r[s-1]+e+t));return r.join("").substr(0,a)}function n(t){return e.md.md5.create().update(t).digest().getBytes()}"undefined"==typeof BigInteger&&(BigInteger=e.jsbn.BigInteger);var o=e.asn1,c=e.pki=e.pki||{},u=c.oids;c.pbe={};var l={};l.CN=u.commonName,l.commonName="CN",l.C=u.countryName,l.countryName="C",l.L=u.localityName,l.localityName="L",l.ST=u.stateOrProvinceName,l.stateOrProvinceName="ST",l.O=u.organizationName,l.organizationName="O",l.OU=u.organizationalUnitName,l.organizationalUnitName="OU",l.E=u.emailAddress,l.emailAddress="E";var p={name:"SubjectPublicKeyInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"publicKeyOid"}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,value:[{name:"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"rsaPublicKey"}]}]},d={name:"RSAPublicKey",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPublicKey.modulus",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"publicKeyModulus"},{name:"RSAPublicKey.exponent",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"publicKeyExponent"}]},y={name:"Certificate",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"tbsCertificate",value:[{name:"Certificate.TBSCertificate.version",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.version.integer",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certVersion"}]},{name:"Certificate.TBSCertificate.serialNumber",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certSerialNumber"},{name:"Certificate.TBSCertificate.signature",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.signature.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"certinfoSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"certinfoSignatureParams"}]},{name:"Certificate.TBSCertificate.issuer",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certIssuer"},{name:"Certificate.TBSCertificate.validity",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.validity.notBefore (utc)",tagClass:o.Class.UNIVERSAL,type:o.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity1UTCTime"},{name:"Certificate.TBSCertificate.validity.notBefore (generalized)",tagClass:o.Class.UNIVERSAL,type:o.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity2GeneralizedTime"},{name:"Certificate.TBSCertificate.validity.notAfter (utc)",tagClass:o.Class.UNIVERSAL,type:o.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity3UTCTime"},{name:"Certificate.TBSCertificate.validity.notAfter (generalized)",tagClass:o.Class.UNIVERSAL,type:o.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity4GeneralizedTime"}]},{name:"Certificate.TBSCertificate.subject",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certSubject"},p,{name:"Certificate.TBSCertificate.issuerUniqueID",tagClass:o.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.issuerUniqueID.id",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certIssuerUniqueId"}]},{name:"Certificate.TBSCertificate.subjectUniqueID",tagClass:o.Class.CONTEXT_SPECIFIC,type:2,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.subjectUniqueID.id",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certSubjectUniqueId"}]},{name:"Certificate.TBSCertificate.extensions",tagClass:o.Class.CONTEXT_SPECIFIC,type:3,constructed:!0,captureAsn1:"certExtensions",optional:!0}]},{name:"Certificate.signatureAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.signatureAlgorithm.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"certSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"certSignatureParams"}]},{name:"Certificate.signatureValue",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certSignature"}]},C={name:"PrivateKeyInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PrivateKeyInfo.version",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"privateKeyOid"}]},{name:"PrivateKeyInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.OCTETSTRING,constructed:!1,capture:"privateKey"}]},E={name:"RSAPrivateKey",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPrivateKey.version",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"RSAPrivateKey.modulus",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyModulus"},{name:"RSAPrivateKey.publicExponent",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyPublicExponent"},{name:"RSAPrivateKey.privateExponent",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyPrivateExponent"},{name:"RSAPrivateKey.prime1",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyPrime1"},{name:"RSAPrivateKey.prime2",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyPrime2"},{name:"RSAPrivateKey.exponent1",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyExponent1"},{name:"RSAPrivateKey.exponent2",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyExponent2"},{name:"RSAPrivateKey.coefficient",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyCoefficient"}]},f={name:"EncryptedPrivateKeyInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"encryptionParams"}]},{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:o.Class.UNIVERSAL,type:o.Type.OCTETSTRING,constructed:!1,capture:"encryptedData"}]},m={name:"PBES2Algorithms",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc.oid",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"kdfOid"},{name:"PBES2Algorithms.params",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.params.salt",tagClass:o.Class.UNIVERSAL,type:o.Type.OCTETSTRING,constructed:!1,capture:"kdfSalt"},{name:"PBES2Algorithms.params.iterationCount",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,onstructed:!0,capture:"kdfIterationCount"}]}]},{name:"PBES2Algorithms.encryptionScheme",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.encryptionScheme.oid",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"encOid"},{name:"PBES2Algorithms.encryptionScheme.iv",tagClass:o.Class.UNIVERSAL,type:o.Type.OCTETSTRING,constructed:!1,capture:"encIv"}]}]},g={name:"pkcs-12PbeParams",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"pkcs-12PbeParams.salt",tagClass:o.Class.UNIVERSAL,type:o.Type.OCTETSTRING,constructed:!1,capture:"salt"},{name:"pkcs-12PbeParams.iterations",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"iterations"}]},h={name:"rsapss",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.hashAlgorithm",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier",tagClass:o.Class.UNIVERSAL,type:o.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"hashOid"}]}]},{name:"rsapss.maskGenAlgorithm",tagClass:o.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier",tagClass:o.Class.UNIVERSAL,type:o.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"maskGenOid"},{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"maskGenHashOid"}]}]}]},{name:"rsapss.saltLength",tagClass:o.Class.CONTEXT_SPECIFIC,type:2,optional:!0,value:[{name:"rsapss.saltLength.saltLength",tagClass:o.Class.UNIVERSAL,type:o.Class.INTEGER,constructed:!1,capture:"saltLength"}]},{name:"rsapss.trailerField",tagClass:o.Class.CONTEXT_SPECIFIC,type:3,optional:!0,value:[{name:"rsapss.trailer.trailer",tagClass:o.Class.UNIVERSAL,type:o.Class.INTEGER,constructed:!1,capture:"trailer"}]}]},S={name:"CertificationRequestInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfo",value:[{name:"CertificationRequestInfo.integer",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certificationRequestInfoVersion"},{name:"CertificationRequestInfo.subject",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfoSubject"},p,{name:"CertificationRequestInfo.attributes",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,capture:"certificationRequestInfoAttributes",value:[{name:"CertificationRequestInfo.attributes",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequestInfo.attributes.type",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1},{name:"CertificationRequestInfo.attributes.value",tagClass:o.Class.UNIVERSAL,type:o.Type.SET,constructed:!0}]}]}]},T={name:"CertificationRequest",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"csr",value:[S,{name:"CertificationRequest.signatureAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequest.signatureAlgorithm.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"csrSignatureOid"},{name:"CertificationRequest.signatureAlgorithm.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"csrSignatureParams"}]},{name:"CertificationRequest.signature",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"csrSignature"}]};c.RDNAttributesAsArray=function(e,t){for(var a,r,i,s=[],n=0;n<e.value.length;++n){a=e.value[n];for(var c=0;c<a.value.length;++c)i={},r=a.value[c],i.type=o.derToOid(r.value[0].value),i.value=r.value[1].value,i.valueTagClass=r.value[1].type,i.type in u&&(i.name=u[i.type],i.name in l&&(i.shortName=l[i.name])),t&&(t.update(i.type),t.update(i.value)),s.push(i)}return s},c.CRIAttributesAsArray=function(e){for(var t=[],a=0;a<e.length;++a)for(var r=e[a],i=o.derToOid(r.value[0].value),s=r.value[1].value,n=0;n<s.length;++n){var c={};c.type=i,c.value=s[n].value,c.valueTagClass=s[n].type,c.type in u&&(c.name=u[c.type],c.name in l&&(c.shortName=l[c.name])),t.push(c)}return t};var I=function(e,t){"string"==typeof t&&(t={shortName:t});for(var a,r=null,i=0;null===r&&i<e.attributes.length;++i)a=e.attributes[i],t.type&&t.type===a.type?r=a:t.name&&t.name===a.name?r=a:t.shortName&&t.shortName===a.shortName&&(r=a);return r},v=function(t){for(var a,r,i,s=[],n=0;n<t.value.length;++n){i=t.value[n];for(var c=0;c<i.value.length;++c){if(r=i.value[c],a={},a.id=o.derToOid(r.value[0].value),a.critical=!1,r.value[1].type===o.Type.BOOLEAN?(a.critical=0!==r.value[1].value.charCodeAt(0),a.value=r.value[2].value):a.value=r.value[1].value,a.id in u)if(a.name=u[a.id],"keyUsage"===a.name){var l=o.fromDer(a.value),p=0,d=0;l.value.length>1&&(p=l.value.charCodeAt(1),d=l.value.length>2?l.value.charCodeAt(2):0),a.digitalSignature=128===(128&p),a.nonRepudiation=64===(64&p),a.keyEncipherment=32===(32&p),a.dataEncipherment=16===(16&p),a.keyAgreement=8===(8&p),a.keyCertSign=4===(4&p),a.cRLSign=2===(2&p),a.encipherOnly=1===(1&p),a.decipherOnly=128===(128&d)}else if("basicConstraints"===a.name){var l=o.fromDer(a.value);if(a.cA=l.value.length>0?0!==l.value[0].value.charCodeAt(0):!1,l.value.length>1){var y=e.util.createBuffer(l.value[1].value);a.pathLenConstraint=y.getInt(y.length()<<3)}}else if("extKeyUsage"===a.name)for(var l=o.fromDer(a.value),C=0;C<l.value.length;++C){var E=o.derToOid(l.value[C].value);E in u?a[u[E]]=!0:a[E]=!0}else if("nsCertType"===a.name){var l=o.fromDer(a.value),p=0;l.value.length>1&&(p=l.value.charCodeAt(1)),a.client=128===(128&p),a.server=64===(64&p),a.email=32===(32&p),a.objsign=16===(16&p),a.reserved=8===(8&p),a.sslCA=4===(4&p),a.emailCA=2===(2&p),a.objCA=1===(1&p)}else if("subjectAltName"===a.name||"issuerAltName"===a.name){a.altNames=[];for(var f,l=o.fromDer(a.value),m=0;m<l.value.length;++m){f=l.value[m];var g={type:f.type,value:f.value};switch(a.altNames.push(g),f.type){case 1:case 2:case 6:break;case 7:break;case 8:g.oid=o.derToOid(f.value)}}}else if("subjectKeyIdentifier"===a.name){var l=o.fromDer(a.value);a.subjectKeyIdentifier=e.util.bytesToHex(l.value)}s.push(a)}}return s};c.pemToDer=function(t){var a=e.pem.decode(t)[0];if(a.procType&&"ENCRYPTED"===a.procType.type)throw{message:"Could not convert PEM to DER; PEM is encrypted."};return e.util.createBuffer(a.body)};var A=function(t){var a=t.toString(16);return a[0]>="8"&&(a="00"+a),e.util.hexToBytes(a)},R=function(e,t,a){var r={};if(e!==u["RSASSA-PSS"])return r;a&&(r={hash:{algorithmOid:u.sha1},mgf:{algorithmOid:u.mgf1,hash:{algorithmOid:u.sha1}},saltLength:20});var i={},s=[];if(!o.validate(t,h,i,s))throw{message:"Cannot read RSASSA-PSS parameter block.",errors:s};return void 0!==i.hashOid&&(r.hash=r.hash||{},r.hash.algorithmOid=o.derToOid(i.hashOid)),void 0!==i.maskGenOid&&(r.mgf=r.mgf||{},r.mgf.algorithmOid=o.derToOid(i.maskGenOid),r.mgf.hash=r.mgf.hash||{},r.mgf.hash.algorithmOid=o.derToOid(i.maskGenHashOid)),void 0!==i.saltLength&&(r.saltLength=i.saltLength.charCodeAt(0)),r};c.certificateFromPem=function(t,a,r){var i=e.pem.decode(t)[0];if("CERTIFICATE"!==i.type&&"X509 CERTIFICATE"!==i.type&&"TRUSTED CERTIFICATE"!==i.type)throw{message:'Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".',headerType:i.type};if(i.procType&&"ENCRYPTED"===i.procType.type)throw{message:"Could not convert certificate from PEM; PEM is encrypted."};var s=o.fromDer(i.body,r);return c.certificateFromAsn1(s,a)},c.certificateToPem=function(t,a){var r={type:"CERTIFICATE",body:o.toDer(c.certificateToAsn1(t)).getBytes()};return e.pem.encode(r,{maxline:a})},c.publicKeyFromPem=function(t){var a=e.pem.decode(t)[0];if("PUBLIC KEY"!==a.type&&"RSA PUBLIC KEY"!==a.type)throw{message:'Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".',headerType:a.type};if(a.procType&&"ENCRYPTED"===a.procType.type)throw{message:"Could not convert public key from PEM; PEM is encrypted."};var r=o.fromDer(a.body);return c.publicKeyFromAsn1(r)},c.publicKeyToPem=function(t,a){var r={type:"PUBLIC KEY",body:o.toDer(c.publicKeyToAsn1(t)).getBytes()};return e.pem.encode(r,{maxline:a})},c.publicKeyToRSAPublicKeyPem=function(t,a){var r={type:"RSA PUBLIC KEY",body:o.toDer(c.publicKeyToRSAPublicKey(t)).getBytes()};return e.pem.encode(r,{maxline:a})},c.privateKeyFromPem=function(t){var a=e.pem.decode(t)[0];if("PRIVATE KEY"!==a.type&&"RSA PRIVATE KEY"!==a.type)throw{message:'Could not convert private key from PEM; PEM header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".',headerType:a.type};if(a.procType&&"ENCRYPTED"===a.procType.type)throw{message:"Could not convert private key from PEM; PEM is encrypted."};var r=o.fromDer(a.body);return c.privateKeyFromAsn1(r)},c.privateKeyToPem=function(t,a){var r={type:"RSA PRIVATE KEY",body:o.toDer(c.privateKeyToAsn1(t)).getBytes()};return e.pem.encode(r,{maxline:a})},c.certificationRequestFromPem=function(t,a,r){var i=e.pem.decode(t)[0];if("CERTIFICATE REQUEST"!==i.type)throw{message:'Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".',headerType:i.type};if(i.procType&&"ENCRYPTED"===i.procType.type)throw{message:"Could not convert certification request from PEM; PEM is encrypted."};var s=o.fromDer(i.body,r);return c.certificationRequestFromAsn1(s,a)},c.certificationRequestToPem=function(t,a){var r={type:"CERTIFICATE REQUEST",body:o.toDer(c.certificationRequestToAsn1(t)).getBytes()};return e.pem.encode(r,{maxline:a})},c.createCertificate=function(){var t={};t.version=2,t.serialNumber="00",t.signatureOid=null,t.signature=null,t.siginfo={},t.siginfo.algorithmOid=null,t.validity={},t.validity.notBefore=new Date,t.validity.notAfter=new Date,t.issuer={},t.issuer.getField=function(e){return I(t.issuer,e)},t.issuer.addField=function(e){a([e]),t.issuer.attributes.push(e)},t.issuer.attributes=[],t.issuer.hash=null,t.subject={},t.subject.getField=function(e){return I(t.subject,e)},t.subject.addField=function(e){a([e]),t.subject.attributes.push(e)},t.subject.attributes=[],t.subject.hash=null,t.extensions=[],t.publicKey=null,t.md=null;var a=function(e){for(var t,a=0;a<e.length;++a){if(t=e[a],"undefined"==typeof t.name&&(t.type&&t.type in c.oids?t.name=c.oids[t.type]:t.shortName&&t.shortName in l&&(t.name=c.oids[l[t.shortName]])),"undefined"==typeof t.type){if(!(t.name&&t.name in c.oids))throw{message:"Attribute type not specified.",attribute:t};t.type=c.oids[t.name]}if("undefined"==typeof t.shortName&&t.name&&t.name in l&&(t.shortName=l[t.name]),"undefined"==typeof t.value)throw{message:"Attribute value not specified.",attribute:t}}};return t.setSubject=function(e,r){a(e),t.subject.attributes=e,delete t.subject.uniqueId,r&&(t.subject.uniqueId=r),t.subject.hash=null},t.setIssuer=function(e,r){a(e),t.issuer.attributes=e,delete t.issuer.uniqueId,r&&(t.issuer.uniqueId=r),t.issuer.hash=null},t.setExtensions=function(a){for(var r,i=0;i<a.length;++i){if(r=a[i],"undefined"==typeof r.name&&r.id&&r.id in c.oids&&(r.name=c.oids[r.id]),"undefined"==typeof r.id){if(!(r.name&&r.name in c.oids))throw{message:"Extension ID not specified.",extension:r};r.id=c.oids[r.name]}if("undefined"==typeof r.value){if("keyUsage"===r.name){var s=0,n=0,l=0;r.digitalSignature&&(n|=128,s=7),r.nonRepudiation&&(n|=64,s=6),r.keyEncipherment&&(n|=32,s=5),r.dataEncipherment&&(n|=16,s=4),r.keyAgreement&&(n|=8,s=3),r.keyCertSign&&(n|=4,s=2),r.cRLSign&&(n|=2,s=1),r.encipherOnly&&(n|=1,s=0),r.decipherOnly&&(l|=128,s=7);var p=String.fromCharCode(s);0!==l?p+=String.fromCharCode(n)+String.fromCharCode(l):0!==n&&(p+=String.fromCharCode(n)),r.value=o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,p)}else if("basicConstraints"===r.name){if(r.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]),r.cA&&r.value.value.push(o.create(o.Class.UNIVERSAL,o.Type.BOOLEAN,!1,String.fromCharCode(255))),r.pathLenConstraint){var d=r.pathLenConstraint,y=e.util.createBuffer();y.putInt(d,d.toString(2).length),r.value.value.push(o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,y.getBytes()))}}else if("extKeyUsage"===r.name){r.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);var C=r.value.value;for(var E in r)r[E]===!0&&(E in u?C.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u[E]).getBytes())):-1!==E.indexOf(".")&&C.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(E).getBytes())))}else if("nsCertType"===r.name){var s=0,n=0;r.client&&(n|=128,s=7),r.server&&(n|=64,s=6),r.email&&(n|=32,s=5),r.objsign&&(n|=16,s=4),r.reserved&&(n|=8,s=3),r.sslCA&&(n|=4,s=2),r.emailCA&&(n|=2,s=1),r.objCA&&(n|=1,s=0);var p=String.fromCharCode(s);0!==n&&(p+=String.fromCharCode(n)),r.value=o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,p)}else if("subjectAltName"===r.name||"issuerAltName"===r.name){r.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);for(var f,m=0;m<r.altNames.length;++m){f=r.altNames[m];var p=f.value;8===f.type&&(p=o.oidToDer(p)),r.value.value.push(o.create(o.Class.CONTEXT_SPECIFIC,f.type,!1,p))}}else if("subjectKeyIdentifier"===r.name){var g=t.generateSubjectKeyIdentifier();r.subjectKeyIdentifier=g.toHex(),r.value=o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,g.getBytes())}if("undefined"==typeof r.value)throw{message:"Extension value not specified.",extension:r}}}t.extensions=a},t.getExtension=function(e){"string"==typeof e&&(e={name:e});for(var a,r=null,i=0;null===r&&i<t.extensions.length;++i)a=t.extensions[i],e.id&&a.id===e.id?r=a:e.name&&a.name===e.name&&(r=a);return r},t.sign=function(a,r){t.md=r||e.md.sha1.create();var i=u[t.md.algorithm+"WithRSAEncryption"];if(!i)throw{message:"Could not compute certificate digest. Unknown message digest algorithm OID.",algorithm:t.md.algorithm};t.signatureOid=t.siginfo.algorithmOid=i,t.tbsCertificate=c.getTBSCertificate(t);var s=o.toDer(t.tbsCertificate);t.md.update(s.getBytes()),t.signature=a.sign(t.md)},t.verify=function(a){var r=!1,i=a.md;if(null===i){if(a.signatureOid in u){var s=u[a.signatureOid];switch(s){case"sha1WithRSAEncryption":i=e.md.sha1.create();break;case"md5WithRSAEncryption":i=e.md.md5.create();break;case"sha256WithRSAEncryption":i=e.md.sha256.create();break;case"RSASSA-PSS":i=e.md.sha256.create()}}if(null===i)throw{message:"Could not compute certificate digest. Unknown signature OID.",signatureOid:a.signatureOid};var n=a.tbsCertificate||c.getTBSCertificate(a),l=o.toDer(n);i.update(l.getBytes())}if(null!==i){var p=void 0;switch(a.signatureOid){case u.sha1WithRSAEncryption:p=void 0;break;case u["RSASSA-PSS"]:var d,y;if(d=u[a.signatureParameters.mgf.hash.algorithmOid],void 0===d||void 0===e.md[d])throw{message:"Unsupported MGF hash function.",oid:a.signatureParameters.mgf.hash.algorithmOid,name:d};if(y=u[a.signatureParameters.mgf.algorithmOid],void 0===y||void 0===e.mgf[y])throw{message:"Unsupported MGF function.",oid:a.signatureParameters.mgf.algorithmOid,name:y};if(y=e.mgf[y].create(e.md[d].create()),d=u[a.signatureParameters.hash.algorithmOid],void 0===d||void 0===e.md[d])throw{message:"Unsupported RSASSA-PSS hash function.",oid:a.signatureParameters.hash.algorithmOid,name:d};p=e.pss.create(e.md[d].create(),y,a.signatureParameters.saltLength)}r=t.publicKey.verify(i.digest().getBytes(),a.signature,p)}return r},t.isIssuer=function(e){var a=!1,r=t.issuer,i=e.subject;if(r.hash&&i.hash)a=r.hash===i.hash;else if(r.attributes.length===i.attributes.length){a=!0;for(var s,n,o=0;a&&o<r.attributes.length;++o)s=r.attributes[o],n=i.attributes[o],(s.type!==n.type||s.value!==n.value)&&(a=!1)}return a},t.generateSubjectKeyIdentifier=function(){var a=o.toDer(c.publicKeyToRSAPublicKey(t.publicKey)),r=e.md.sha1.create();return r.update(a.getBytes()),r.digest()},t.verifySubjectKeyIdentifier=function(){for(var a=u.subjectKeyIdentifier,r=0;r<t.extensions.length;++r){var i=t.extensions[r];if(i.id===a){var s=t.generateSubjectKeyIdentifier().getBytes();return e.util.hexToBytes(i.subjectKeyIdentifier)===s}}return!1},t},c.certificateFromAsn1=function(t,a){var r={},i=[];if(!o.validate(t,y,r,i))throw{message:"Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.",errors:i};if("string"!=typeof r.certSignature){for(var s="\0",n=0;n<r.certSignature.length;++n)s+=o.toDer(r.certSignature[n]).getBytes();r.certSignature=s}var l=o.derToOid(r.publicKeyOid);if(l!==c.oids.rsaEncryption)throw{message:"Cannot read public key. OID is not RSA."};var p=c.createCertificate();p.version=r.certVersion?r.certVersion.charCodeAt(0):0;var d=e.util.createBuffer(r.certSerialNumber);p.serialNumber=d.toHex(),p.signatureOid=e.asn1.derToOid(r.certSignatureOid),p.signatureParameters=R(p.signatureOid,r.certSignatureParams,!0),p.siginfo.algorithmOid=e.asn1.derToOid(r.certinfoSignatureOid),p.siginfo.parameters=R(p.siginfo.algorithmOid,r.certinfoSignatureParams,!1);var C=e.util.createBuffer(r.certSignature);++C.read,p.signature=C.getBytes();var E=[];if(void 0!==r.certValidity1UTCTime&&E.push(o.utcTimeToDate(r.certValidity1UTCTime)),void 0!==r.certValidity2GeneralizedTime&&E.push(o.generalizedTimeToDate(r.certValidity2GeneralizedTime)),void 0!==r.certValidity3UTCTime&&E.push(o.utcTimeToDate(r.certValidity3UTCTime)),void 0!==r.certValidity4GeneralizedTime&&E.push(o.generalizedTimeToDate(r.certValidity4GeneralizedTime)),E.length>2)throw{message:"Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate."};if(E.length<2)throw{message:"Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime."};if(p.validity.notBefore=E[0],p.validity.notAfter=E[1],p.tbsCertificate=r.tbsCertificate,a){if(p.md=null,p.signatureOid in u){var l=u[p.signatureOid];switch(l){case"sha1WithRSAEncryption":p.md=e.md.sha1.create();break;case"md5WithRSAEncryption":p.md=e.md.md5.create();break;case"sha256WithRSAEncryption":p.md=e.md.sha256.create();break;case"RSASSA-PSS":p.md=e.md.sha256.create()}}if(null===p.md)throw{message:"Could not compute certificate digest. Unknown signature OID.",signatureOid:p.signatureOid};var f=o.toDer(p.tbsCertificate);p.md.update(f.getBytes())}var m=e.md.sha1.create();p.issuer.getField=function(e){return I(p.issuer,e)},p.issuer.addField=function(e){_fillMissingFields([e]),p.issuer.attributes.push(e)},p.issuer.attributes=c.RDNAttributesAsArray(r.certIssuer,m),r.certIssuerUniqueId&&(p.issuer.uniqueId=r.certIssuerUniqueId),p.issuer.hash=m.digest().toHex();var g=e.md.sha1.create();return p.subject.getField=function(e){return I(p.subject,e)},p.subject.addField=function(e){_fillMissingFields([e]),p.subject.attributes.push(e)},p.subject.attributes=c.RDNAttributesAsArray(r.certSubject,g),r.certSubjectUniqueId&&(p.subject.uniqueId=r.certSubjectUniqueId),p.subject.hash=g.digest().toHex(),p.extensions=r.certExtensions?v(r.certExtensions):[],p.publicKey=c.publicKeyFromAsn1(r.subjectPublicKeyInfo),p},c.certificationRequestFromAsn1=function(t,a){var r={},i=[];if(!o.validate(t,T,r,i))throw{message:"Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.",errors:i};if("string"!=typeof r.csrSignature){for(var s="\0",n=0;n<r.csrSignature.length;++n)s+=o.toDer(r.csrSignature[n]).getBytes();r.csrSignature=s}var l=o.derToOid(r.publicKeyOid);if(l!==c.oids.rsaEncryption)throw{message:"Cannot read public key. OID is not RSA."};var p=c.createCertificationRequest();p.version=r.csrVersion?r.csrVersion.charCodeAt(0):0,p.signatureOid=e.asn1.derToOid(r.csrSignatureOid),p.signatureParameters=R(p.signatureOid,r.csrSignatureParams,!0),p.siginfo.algorithmOid=e.asn1.derToOid(r.csrSignatureOid),p.siginfo.parameters=R(p.siginfo.algorithmOid,r.csrSignatureParams,!1);var d=e.util.createBuffer(r.csrSignature);if(++d.read,p.signature=d.getBytes(),p.certificationRequestInfo=r.certificationRequestInfo,a){if(p.md=null,p.signatureOid in u){var l=u[p.signatureOid];switch(l){case"sha1WithRSAEncryption":p.md=e.md.sha1.create();break;case"md5WithRSAEncryption":p.md=e.md.md5.create();break;case"sha256WithRSAEncryption":p.md=e.md.sha256.create();break;case"RSASSA-PSS":p.md=e.md.sha256.create()}}if(null===p.md)throw{message:"Could not compute certification request digest. Unknown signature OID.",signatureOid:p.signatureOid};var y=o.toDer(p.certificationRequestInfo);p.md.update(y.getBytes())}var C=e.md.sha1.create();return p.subject.getField=function(e){return I(p.subject,e)},p.subject.addField=function(e){_fillMissingFields([e]),p.subject.attributes.push(e)},p.subject.attributes=c.RDNAttributesAsArray(r.certificationRequestInfoSubject,C),p.subject.hash=C.digest().toHex(),p.publicKey=c.publicKeyFromAsn1(r.subjectPublicKeyInfo),p.getAttribute=function(e){return I(p.attributes,e)},p.addAttribute=function(e){_fillMissingFields([e]),p.attributes.push(e)},p.attributes=c.CRIAttributesAsArray(r.certificationRequestInfoAttributes),p},c.createCertificationRequest=function(){var t={};t.version=0,t.signatureOid=null,t.signature=null,t.siginfo={},t.siginfo.algorithmOid=null,t.subject={},t.subject.getField=function(e){return I(t.subject,e)},t.subject.addField=function(e){a([e]),t.subject.attributes.push(e)},t.subject.attributes=[],t.subject.hash=null,t.publicKey=null,t.attributes=[],t.getAttribute=function(e){return I(t.attributes,e)},t.addAttribute=function(e){a([e]),t.attributes.push(e)},t.md=null;var a=function(e){for(var t,a=0;a<e.length;++a){if(t=e[a],"undefined"==typeof t.name&&(t.type&&t.type in c.oids?t.name=c.oids[t.type]:t.shortName&&t.shortName in l&&(t.name=c.oids[l[t.shortName]])),"undefined"==typeof t.type){if(!(t.name&&t.name in c.oids))throw{message:"Attribute type not specified.",attribute:t};t.type=c.oids[t.name]}if("undefined"==typeof t.shortName&&t.name&&t.name in l&&(t.shortName=l[t.name]),"undefined"==typeof t.value)throw{message:"Attribute value not specified.",attribute:t}}};return t.setSubject=function(e){a(e),t.subject.attributes=e,t.subject.hash=null
},t.setAttributes=function(e){a(e),t.attributes=e},t.sign=function(a,r){t.md=r||e.md.sha1.create();var i=u[t.md.algorithm+"WithRSAEncryption"];if(!i)throw{message:"Could not compute certification request digest. Unknown message digest algorithm OID.",algorithm:t.md.algorithm};t.signatureOid=t.siginfo.algorithmOid=i,t.certificationRequestInfo=c.getCertificationRequestInfo(t);var s=o.toDer(t.certificationRequestInfo);t.md.update(s.getBytes()),t.signature=a.sign(t.md)},t.verify=function(){var a=!1,r=t.md;if(null===r){if(t.signatureOid in u){var i=u[t.signatureOid];switch(i){case"sha1WithRSAEncryption":r=e.md.sha1.create();break;case"md5WithRSAEncryption":r=e.md.md5.create();break;case"sha256WithRSAEncryption":r=e.md.sha256.create();break;case"RSASSA-PSS":r=e.md.sha256.create()}}if(null===r)throw{message:"Could not compute certification request digest. Unknown signature OID.",signatureOid:t.signatureOid};var s=t.certificationRequestInfo||c.getCertificationRequestInfo(t),n=o.toDer(s);r.update(n.getBytes())}if(null!==r){var l=void 0;switch(t.signatureOid){case u.sha1WithRSAEncryption:l=void 0;break;case u["RSASSA-PSS"]:var p,d;if(p=u[t.signatureParameters.mgf.hash.algorithmOid],void 0===p||void 0===e.md[p])throw{message:"Unsupported MGF hash function.",oid:t.signatureParameters.mgf.hash.algorithmOid,name:p};if(d=u[t.signatureParameters.mgf.algorithmOid],void 0===d||void 0===e.mgf[d])throw{message:"Unsupported MGF function.",oid:t.signatureParameters.mgf.algorithmOid,name:d};if(d=e.mgf[d].create(e.md[p].create()),p=u[t.signatureParameters.hash.algorithmOid],void 0===p||void 0===e.md[p])throw{message:"Unsupported RSASSA-PSS hash function.",oid:t.signatureParameters.hash.algorithmOid,name:p};l=e.pss.create(e.md[p].create(),d,t.signatureParameters.saltLength)}a=t.publicKey.verify(r.digest().getBytes(),t.signature,l)}return a},t},c.getTBSCertificate=function(i){var s=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,String.fromCharCode(i.version))]),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,e.util.hexToBytes(i.serialNumber)),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(i.siginfo.algorithmOid).getBytes()),r(i.siginfo.algorithmOid,i.siginfo.parameters)]),t(i.issuer),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.UTCTIME,!1,o.dateToUtcTime(i.validity.notBefore)),o.create(o.Class.UNIVERSAL,o.Type.UTCTIME,!1,o.dateToUtcTime(i.validity.notAfter))]),t(i.subject),c.publicKeyToAsn1(i.publicKey)]);return i.issuer.uniqueId&&s.value.push(o.create(o.Class.CONTEXT_SPECIFIC,1,!0,[o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+i.issuer.uniqueId)])),i.subject.uniqueId&&s.value.push(o.create(o.Class.CONTEXT_SPECIFIC,2,!0,[o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+i.subject.uniqueId)])),i.extensions.length>0&&s.value.push(a(i.extensions)),s},c.getCertificationRequestInfo=function(e){var a=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,String.fromCharCode(e.version)),t(e.subject),c.publicKeyToAsn1(e.publicKey),i(e)]);return a},c.distinguishedNameToAsn1=function(e){return t(e)},c.certificateToAsn1=function(e){var t=e.tbsCertificate||c.getTBSCertificate(e);return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[t,o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(e.signatureOid).getBytes()),r(e.signatureOid,e.signatureParameters)]),o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+e.signature)])},c.certificationRequestToAsn1=function(e){var t=e.certificationRequestInfo||c.getCertificationRequestInfo(e);return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[t,o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(e.signatureOid).getBytes()),r(e.signatureOid,e.signatureParameters)]),o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+e.signature)])},c.createCaStore=function(a){var r={certs:{}};if(r.getIssuer=function(a){var i=null;if(!a.issuer.hash){var s=e.md.sha1.create();a.issuer.attributes=c.RDNAttributesAsArray(t(a.issuer),s),a.issuer.hash=s.digest().toHex()}if(a.issuer.hash in r.certs&&(i=r.certs[a.issuer.hash],e.util.isArray(i)))throw{message:"Resolving multiple issuer matches not implemented yet."};return i},r.addCertificate=function(a){if("string"==typeof a&&(a=e.pki.certificateFromPem(a)),!a.subject.hash){var i=e.md.sha1.create();a.subject.attributes=c.RDNAttributesAsArray(t(a.subject),i),a.subject.hash=i.digest().toHex()}if(a.subject.hash in r.certs){var s=r.certs[a.subject.hash];e.util.isArray(s)||(s=[s]),s.push(a)}else r.certs[a.subject.hash]=a},a)for(var i=0;i<a.length;++i){var s=a[i];r.addCertificate(s)}return r},c.certificateError={bad_certificate:"forge.pki.BadCertificate",unsupported_certificate:"forge.pki.UnsupportedCertificate",certificate_revoked:"forge.pki.CertificateRevoked",certificate_expired:"forge.pki.CertificateExpired",certificate_unknown:"forge.pki.CertificateUnknown",unknown_ca:"forge.pki.UnknownCertificateAuthority"},c.verifyCertificateChain=function(t,a,r){a=a.slice(0);var i=a.slice(0),s=new Date,n=!0,o=null,u=0,l=null;do{var p=a.shift();if(s<p.validity.notBefore||s>p.validity.notAfter)o={message:"Certificate is not valid yet or has expired.",error:c.certificateError.certificate_expired,notBefore:p.validity.notBefore,notAfter:p.validity.notAfter,now:s};else{var d=!1;if(a.length>0){l=a[0];try{d=l.verify(p)}catch(y){}}else{var C=t.getIssuer(p);if(null===C)o={message:"Certificate is not trusted.",error:c.certificateError.unknown_ca};else for(e.util.isArray(C)||(C=[C]);!d&&C.length>0;){l=C.shift();try{d=l.verify(p)}catch(y){}}}null!==o||d||(o={message:"Certificate signature is invalid.",error:c.certificateError.bad_certificate})}if(null!==o||p.isIssuer(l)||(o={message:"Certificate issuer is invalid.",error:c.certificateError.bad_certificate}),null===o)for(var E={keyUsage:!0,basicConstraints:!0},f=0;null===o&&f<p.extensions.length;++f){var m=p.extensions[f];!m.critical||m.name in E||(o={message:"Certificate has an unsupported critical extension.",error:c.certificateError.unsupported_certificate})}if(!n||0===a.length&&!l){var g=p.getExtension("basicConstraints"),h=p.getExtension("keyUsage");null!==h&&(h.keyCertSign&&null!==g||(o={message:"Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.",error:c.certificateError.bad_certificate})),null!==o||null===g||g.cA||(o={message:"Certificate basicConstraints indicates the certificate is not a CA.",error:c.certificateError.bad_certificate})}var S=null===o?!0:o.error,T=r?r(S,u,i):S;if(T!==!0)throw S===!0&&(o={message:"The application rejected the certificate.",error:c.certificateError.bad_certificate}),(T||0===T)&&("object"!=typeof T||e.util.isArray(T)?"string"==typeof T&&(o.error=T):(T.message&&(o.message=T.message),T.error&&(o.error=T.error))),o;o=null,n=!1,++u}while(a.length>0);return!0},c.publicKeyFromAsn1=function(t){var a={},r=[];if(o.validate(t,p,a,r)){var i=o.derToOid(a.publicKeyOid);if(i!==c.oids.rsaEncryption)throw{message:"Cannot read public key. Unknown OID.",oid:i};t=a.rsaPublicKey}if(r=[],!o.validate(t,d,a,r))throw{message:"Cannot read public key. ASN.1 object does not contain an RSAPublicKey.",errors:r};var s=e.util.createBuffer(a.publicKeyModulus).toHex(),n=e.util.createBuffer(a.publicKeyExponent).toHex();return c.setRsaPublicKey(new BigInteger(s,16),new BigInteger(n,16))},c.publicKeyToAsn1=c.publicKeyToSubjectPublicKeyInfo=function(e){return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(c.oids.rsaEncryption).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")]),o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,[c.publicKeyToRSAPublicKey(e)])])},c.publicKeyToRSAPublicKey=function(e){return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.n)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.e))])},c.privateKeyFromAsn1=function(t){var a={},r=[];if(o.validate(t,C,a,r)&&(t=o.fromDer(e.util.createBuffer(a.privateKey))),a={},r=[],!o.validate(t,E,a,r))throw{message:"Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.",errors:r};var i,s,n,u,l,p,d,y;return i=e.util.createBuffer(a.privateKeyModulus).toHex(),s=e.util.createBuffer(a.privateKeyPublicExponent).toHex(),n=e.util.createBuffer(a.privateKeyPrivateExponent).toHex(),u=e.util.createBuffer(a.privateKeyPrime1).toHex(),l=e.util.createBuffer(a.privateKeyPrime2).toHex(),p=e.util.createBuffer(a.privateKeyExponent1).toHex(),d=e.util.createBuffer(a.privateKeyExponent2).toHex(),y=e.util.createBuffer(a.privateKeyCoefficient).toHex(),c.setRsaPrivateKey(new BigInteger(i,16),new BigInteger(s,16),new BigInteger(n,16),new BigInteger(u,16),new BigInteger(l,16),new BigInteger(p,16),new BigInteger(d,16),new BigInteger(y,16))},c.privateKeyToAsn1=c.privateKeyToRSAPrivateKey=function(e){return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,String.fromCharCode(0)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.n)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.e)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.d)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.p)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.q)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.dP)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.dQ)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,A(e.qInv))])},c.wrapRsaPrivateKey=function(e){return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,"\0"),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.rsaEncryption).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")]),o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,o.toDer(e).getBytes())])},c.encryptPrivateKeyInfo=function(t,a,r){r=r||{},r.saltSize=r.saltSize||8,r.count=r.count||2048,r.algorithm=r.algorithm||"aes128";var i=e.random.getBytes(r.saltSize),s=r.count,n=e.util.createBuffer();n.putInt16(s);var c,l,p;if(0===r.algorithm.indexOf("aes")){var d;if("aes128"===r.algorithm)c=16,d=u["aes128-CBC"];else if("aes192"===r.algorithm)c=24,d=u["aes192-CBC"];else{if("aes256"!==r.algorithm)throw{message:"Cannot encrypt private key. Unknown encryption algorithm.",algorithm:r.algorithm};c=32,d=u["aes256-CBC"]}var y=e.pkcs5.pbkdf2(a,i,s,c),C=e.random.getBytes(16),E=e.aes.createEncryptionCipher(y);E.start(C),E.update(o.toDer(t)),E.finish(),p=E.output.getBytes(),l=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.pkcs5PBES2).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.pkcs5PBKDF2).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,i),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,n.getBytes())])]),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(d).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,C)])])])}else{if("3des"!==r.algorithm)throw{message:"Cannot encrypt private key. Unknown encryption algorithm.",algorithm:r.algorithm};c=24;var f=new e.util.ByteBuffer(i),y=e.pkcs12.generateKey(a,f,1,s,c),C=e.pkcs12.generateKey(a,f,2,s,c),E=e.des.createEncryptionCipher(y);E.start(C),E.update(o.toDer(t)),E.finish(),p=E.output.getBytes(),l=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,i),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,n.getBytes())])])}var m=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[l,o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,p)]);return m},c.pbe.getCipherForPBES2=function(t,a,r){var i={},s=[];if(!o.validate(a,m,i,s))throw{message:"Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.",errors:s};if(t=o.derToOid(i.kdfOid),t!==c.oids.pkcs5PBKDF2)throw{message:"Cannot read encrypted private key. Unsupported key derivation function OID.",oid:t,supportedOids:["pkcs5PBKDF2"]};if(t=o.derToOid(i.encOid),t!==c.oids["aes128-CBC"]&&t!==c.oids["aes192-CBC"]&&t!==c.oids["aes256-CBC"])throw{message:"Cannot read encrypted private key. Unsupported encryption scheme OID.",oid:t,supportedOids:["aes128-CBC","aes192-CBC","aes256-CBC"]};var n=i.kdfSalt,u=e.util.createBuffer(i.kdfIterationCount);u=u.getInt(u.length()<<3);var l;t===c.oids["aes128-CBC"]?l=16:t===c.oids["aes192-CBC"]?l=24:t===c.oids["aes256-CBC"]&&(l=32);var p=e.pkcs5.pbkdf2(r,n,u,l),d=i.encIv,y=e.aes.createDecryptionCipher(p);return y.start(d),y},c.pbe.getCipherForPKCS12PBE=function(t,a,r){var i={},s=[];if(!o.validate(a,g,i,s))throw{message:"Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.",errors:s};var n=e.util.createBuffer(i.salt),u=e.util.createBuffer(i.iterations);u=u.getInt(u.length()<<3);var l,p,d;switch(t){case c.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:l=24,p=8,d=e.des.startDecrypting;break;case c.oids["pbewithSHAAnd40BitRC2-CBC"]:l=5,p=8,d=function(t,a){var r=e.rc2.createDecryptionCipher(t,40);return r.start(a,null),r};break;default:throw{message:"Cannot read PKCS #12 PBE data block. Unsupported OID.",oid:t}}var y=e.pkcs12.generateKey(r,n,1,u,l),C=e.pkcs12.generateKey(r,n,2,u,p);return d(y,C)},c.pbe.getCipher=function(e,t,a){switch(e){case c.oids.pkcs5PBES2:return c.pbe.getCipherForPBES2(e,t,a);case c.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:case c.oids["pbewithSHAAnd40BitRC2-CBC"]:return c.pbe.getCipherForPKCS12PBE(e,t,a);default:throw{message:"Cannot read encrypted PBE data block. Unsupported OID.",oid:e,supportedOids:["pkcs5PBES2","pbeWithSHAAnd3-KeyTripleDES-CBC","pbewithSHAAnd40BitRC2-CBC"]}}},c.decryptPrivateKeyInfo=function(t,a){var r=null,i={},s=[];if(!o.validate(t,f,i,s))throw{message:"Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.",errors:s};var n=o.derToOid(i.encryptionOid),u=c.pbe.getCipher(n,i.encryptionParams,a),l=e.util.createBuffer(i.encryptedData);return u.update(l),u.finish()&&(r=o.fromDer(u.output)),r},c.encryptedPrivateKeyToPem=function(t,a){var r={type:"ENCRYPTED PRIVATE KEY",body:o.toDer(t).getBytes()};return e.pem.encode(r,{maxline:a})},c.encryptedPrivateKeyFromPem=function(t){var a=e.pem.decode(t)[0];if("ENCRYPTED PRIVATE KEY"!==a.type)throw{message:'Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".',headerType:a.type};if(a.procType&&"ENCRYPTED"===a.procType.type)throw{message:"Could not convert encrypted private key from PEM; PEM is encrypted."};return o.fromDer(a.body)},c.encryptRsaPrivateKey=function(t,a,r){if(r=r||{},!r.legacy){var i=c.wrapRsaPrivateKey(c.privateKeyToAsn1(t));return i=c.encryptPrivateKeyInfo(i,a,r),c.encryptedPrivateKeyToPem(i)}var n,u,l,p;switch(r.algorithm){case"aes128":n="AES-128-CBC",l=16,u=e.random.getBytes(16),p=e.aes.createEncryptionCipher;break;case"aes192":n="AES-192-CBC",l=24,u=e.random.getBytes(16),p=e.aes.createEncryptionCipher;break;case"aes256":n="AES-256-CBC",l=32,u=e.random.getBytes(16),p=e.aes.createEncryptionCipher;break;case"3des":n="DES-EDE3-CBC",l=24,u=e.random.getBytes(8),p=e.des.createEncryptionCipher;break;default:throw{message:'Could not encrypt RSA private key; unsupported encryption algorithm "'+r.algorithm+'".',algorithm:r.algorithm}}var d=s(a,u.substr(0,8),l),y=p(d);y.start(u),y.update(o.toDer(c.privateKeyToAsn1(t))),y.finish();var C={type:"RSA PRIVATE KEY",procType:{version:"4",type:"ENCRYPTED"},dekInfo:{algorithm:n,parameters:e.util.bytesToHex(u).toUpperCase()},body:y.output.getBytes()};return e.pem.encode(C)},c.decryptRsaPrivateKey=function(t,a){var r=null,i=e.pem.decode(t)[0];if("ENCRYPTED PRIVATE KEY"!==i.type&&"PRIVATE KEY"!==i.type&&"RSA PRIVATE KEY"!==i.type)throw{message:'Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".',headerType:i.type};if(i.procType&&"ENCRYPTED"===i.procType.type){var n,u;switch(i.dekInfo.algorithm){case"DES-EDE3-CBC":n=24,u=e.des.createDecryptionCipher;break;case"AES-128-CBC":n=16,u=e.aes.createDecryptionCipher;break;case"AES-192-CBC":n=24,u=e.aes.createDecryptionCipher;break;case"AES-256-CBC":n=32,u=e.aes.createDecryptionCipher;break;case"RC2-40-CBC":n=5,u=function(t){return e.rc2.createDecryptionCipher(t,40)};break;case"RC2-64-CBC":n=8,u=function(t){return e.rc2.createDecryptionCipher(t,64)};break;case"RC2-128-CBC":n=16,u=function(t){return e.rc2.createDecryptionCipher(t,128)};break;default:throw{message:'Could not decrypt private key; unsupported encryption algorithm "'+i.dekInfo.algorithm+'".',algorithm:i.dekInfo.algorithm}}var l=e.util.hexToBytes(i.dekInfo.parameters),p=s(a,l.substr(0,8),n),d=u(p);if(d.start(l),d.update(e.util.createBuffer(i.body)),!d.finish())return r;r=d.output.getBytes()}else r=i.body;return r="ENCRYPTED PRIVATE KEY"===i.type?c.decryptPrivateKeyInfo(o.fromDer(r),a):o.fromDer(r),null!==r&&(r=c.privateKeyFromAsn1(r)),r},c.setRsaPublicKey=c.rsa.setPublicKey,c.setRsaPrivateKey=c.rsa.setPrivateKey}var t="pki";if("function"!=typeof define){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;define=function(e,t){t(require,module)}}var r,i=function(a,i){i.exports=function(i){var s=r.map(function(e){return a(e)}).concat(e);if(i=i||{},i.defined=i.defined||{},i.defined[t])return i[t];i.defined[t]=!0;for(var n=0;n<s.length;++n)s[n](i);return i[t]}},s=define;define=function(e,t){return r="string"==typeof e?t.slice(2):e.slice(2),a?(delete define,s.apply(null,Array.prototype.slice.call(arguments,0))):(define=s,define.apply(null,Array.prototype.slice.call(arguments,0)))},define(["require","module","./aes","./asn1","./des","./jsbn","./md","./mgf","./oids","./pem","./pbkdf2","./pkcs12","./pss","./random","./rc2","./rsa","./util"],function(){i.apply(null,Array.prototype.slice.call(arguments,0))})}();